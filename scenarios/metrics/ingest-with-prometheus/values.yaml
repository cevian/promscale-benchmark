prometheus:
  version: v2.39.1
  # Configuration options in https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.RemoteWriteSpec
  remoteWrite:
  - url: http://tobs-promscale.bench.svc:9201/write
    remoteTimeout: 100s
    # Configuration options in https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#queueconfig
    # queueConfig:
    #   capacity: 100000
    #   minShards: 20
    #   maxShards: 30
    #   maxSamplesPerSend: 30000
    #   batchSendDeadline: 30s
    #   minBackoff: 100ms
    #   maxBackoff: 2s
  retention: 2h
  resources:
    requests:
      cpu: 2
      memory: 12Gi

avalanche:
  enabled: true
  image:
    repository: quay.io/prometheuscommunity/avalanche
    tag: main
    pullPolicy: Always
  # Use the following config to tweak the number of avalanche targets
  # to scrape instead of increasing replicaCount.
  fakePrometheusTargetCount: 8
  extraArgs:
    - --series-interval=315360000
    - --metric-interval=315360000
    # Total number of time series generated by avalanche is equal to
    #   metric-count * series-count
    # Which is 120K series here by default. This translates to a load
    # of 20K samples / second per replica, with a scrape interval of
    # 30s by Prometheus.
    # To increase the load, we can simply increase the value of
    # replicaCount in avalanche values.
    - --metric-count=5000
    - --series-count=120
    - --label-count=10
    - --value-interval=10
  labels:
    tobs/excluded: "true"
    app.kubernetes.io/part-of: ingest-with-prometheus
  serviceMonitor:
    enabled: true
  serviceAccount:
    create: true
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
